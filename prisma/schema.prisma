// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //directUrl         = env("DIRECT_URL")
}

generator zod {
  provider       = "zod-prisma-types"
}

model Event {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  startdate   DateTime
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model File {
  id        String   @id @default(uuid())
  name      String
  type      String
  size      Int
  url       String
  coverPost Post[]   @relation("PostCover")
  imagePost Post[]   @relation("PostImages")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(name: "ProfileImage", fields: [userId], references: [id])
  userId    String?  @unique
}

model Post {
  id          String   @id @default(uuid())
  name        String
  content     String   @default("")
  slug        String   @unique
  tags        String[]
  cover       File?    @relation("PostCover", fields: [coverId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      File[]   @relation("PostImages")
  createdBy   User     @relation(fields: [createdById], references: [id])
  coverId     String?
  createdById String

  @@index([name])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Role      @default(USER)
  image         String?
  profile       File?     @relation(name: "ProfileImage")
  sessions      Session[]
  posts         Post[]
}
